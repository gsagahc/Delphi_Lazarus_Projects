SET SQL DIALECT 1;

CREATE TABLE CONFIG 
(
  COD	INTEGER NOT NULL,
  IMAGEM	BLOB SUB_TYPE 0 SEGMENT SIZE 1,
CONSTRAINT PK_CONFIG PRIMARY KEY (COD)
);

CREATE TABLE TB_CATEGORIA
(
  ID_CATEGORIA	INTEGER NOT NULL,
  DESCRICAO	VARCHAR(60)
);

CREATE TABLE TB_CLIENTES
(
  ID_CLIENTE	INTEGER NOT NULL,
  ID_CATEGORIA	INTEGER,
  NOME	VARCHAR(70),
  FUNCAO	VARCHAR(40),
  EMPRESA	VARCHAR(50),
  ENDERECO	VARCHAR(70),
  BAIRRO	VARCHAR(40),
  CIDADE	VARCHAR(40),
  CEP	VARCHAR(10),
  FONE	VARCHAR(14),
  FAX	VARCHAR(14),
  CELULAR	VARCHAR(14),
  EMAIL VARCHAR(60),
  DATA_NASC	VARCHAR(5),
  ESTADO	VARCHAR(2)
);

CREATE INDEX IDX_ANIVER ON TB_CLIENTES(DATA_NASC);
CREATE INDEX IDX_CATEGORIA ON TB_CLIENTES(ID_CATEGORIA);
CREATE INDEX IDX_NOME ON TB_CLIENTES(NOME);
CREATE INDEX IDX_UF ON TB_CLIENTES(ESTADO);
CREATE UNIQUE INDEX TB_CLIENTES0 ON TB_CLIENTES(ID_CLIENTE);

CREATE GENERATOR CONFIG_COD_GEN;
CREATE GENERATOR TB_CLIENTES_ID_CLIENTE_GEN;
COMMIT WORK;
SET AUTODDL OFF;
SET TERM ^ ;

CREATE PROCEDURE CONFIG_COD_AUTOINC
RETURNS
(
  NEW_VALUE INTEGER
)
AS
BEGIN EXIT; END ^

CREATE PROCEDURE TB_CLIENTES_ID_CLIENTE_AUTOINC
RETURNS
(
  NEW_VALUE INTEGER
)
AS
BEGIN EXIT; END ^


ALTER PROCEDURE CONFIG_COD_AUTOINC
RETURNS
(
  NEW_VALUE INTEGER
)
AS
BEGIN
  NEW_VALUE = GEN_ID(CONFIG_COD_GEN, 1);
END
 ^


ALTER PROCEDURE TB_CLIENTES_ID_CLIENTE_AUTOINC
RETURNS
(
  NEW_VALUE INTEGER
)
AS
BEGIN
  NEW_VALUE = GEN_ID(TB_CLIENTES_ID_CLIENTE_GEN, 1);
END
 ^

SET TERM ; ^
COMMIT WORK;
SET AUTODDL ON;
SET TERM ^ ;

CREATE TRIGGER AI_CONFIG_COD FOR CONFIG
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.COD IS NULL) THEN
      NEW.COD = GEN_ID(CONFIG_COD_GEN, 1);
END
 ^

CREATE TRIGGER AI_TB_CLIENTES_ID_CLIENTE FOR TB_CLIENTES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_CLIENTE IS NULL) THEN
      NEW.ID_CLIENTE = GEN_ID(TB_CLIENTES_ID_CLIENTE_GEN, 1);
END
 ^

COMMIT WORK ^
SET TERM ;^
