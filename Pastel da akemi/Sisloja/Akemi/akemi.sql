/******************************************************************************/
/*            Generated by IBExpert 2010.01.06 30/1/2010 17:05:57             */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES NONE;

CREATE DATABASE 'C:\Projetos\Akemi\BANCODADOS.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET NONE;



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CLIENTES_ID;
SET GENERATOR GEN_CLIENTES_ID TO 0;

CREATE GENERATOR GEN_CONTAPAG_ID;
SET GENERATOR GEN_CONTAPAG_ID TO 1;

CREATE GENERATOR GEN_CONTAREC_ID;
SET GENERATOR GEN_CONTAREC_ID TO 0;

CREATE GENERATOR GEN_FORNECEDORES_ID;
SET GENERATOR GEN_FORNECEDORES_ID TO 0;

CREATE GENERATOR GEN_ITENS_ID;
SET GENERATOR GEN_ITENS_ID TO 0;

CREATE GENERATOR GEN_NEW_TABLE_ID;
SET GENERATOR GEN_NEW_TABLE_ID TO 0;

CREATE GENERATOR GEN_PRODUTOS_ID;
SET GENERATOR GEN_PRODUTOS_ID TO 0;

CREATE GENERATOR GEN_USUARIO_ID;
SET GENERATOR GEN_USUARIO_ID TO 0;

CREATE GENERATOR GEN_VENDAS_ID;
SET GENERATOR GEN_VENDAS_ID TO 0;

CREATE GENERATOR GEN_VENDEDORES_ID;
SET GENERATOR GEN_VENDEDORES_ID TO 0;



SET TERM ^ ; 



/******************************************************************************/
/*                             Stored Procedures                              */
/******************************************************************************/

CREATE PROCEDURE SP_GEN_CLIENTES_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_CONTAREC_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_FORNECEDORES_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_ITENS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_NEW_TABLE_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_PRODUTOS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_USUARIO_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_VENDAS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SP_GEN_VENDEDORES_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^



SET TERM ; ^



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CLIENTES (
    CODIGO     INTEGER NOT NULL,
    NOME       CHAR(60) CHARACTER SET ASCII,
    ENDERECO   CHAR(60) CHARACTER SET ASCII,
    CIDADE     CHAR(30) CHARACTER SET ASCII,
    ESTADO     CHAR(2) CHARACTER SET ASCII,
    CEP        CHAR(10) CHARACTER SET ASCII,
    TELEFONE   CHAR(30) CHARACTER SET ASCII,
    FAX        CHAR(14) CHARACTER SET ASCII,
    EMAIL      CHAR(60) CHARACTER SET ASCII,
    CGC        CHAR(30) CHARACTER SET ASCII,
    PRAZO      SMALLINT,
    "RG/INSC"  CHAR(24) CHARACTER SET ASCII
);

CREATE TABLE CONTAPAG (
    INDICE  INTEGER NOT NULL,
    NUMERO  CHAR(6) CHARACTER SET ASCII,
    VENCTO  DATE,
    VALOR   CHAR(8) CHARACTER SET ASCII,
    PAGTO   DATE,
    PAGO    CHAR(3) CHARACTER SET ASCII
);

CREATE TABLE CONTAREC (
    CODIGO   INTEGER NOT NULL,
    CLIENTE  INTEGER,
    VENCTO   DATE,
    VALOR    CHAR(8) CHARACTER SET ASCII,
    PAGO     CHAR(3) CHARACTER SET ASCII,
    PAGTO    DATE,
    EMISSAO  DATE,
    PEDIDO   INTEGER,
    DATAPED  DATE
);

CREATE TABLE FORNECEDORES (
    CODIGO    INTEGER NOT NULL,
    NOME      CHAR(60) CHARACTER SET ASCII,
    ENDERECO  CHAR(60) CHARACTER SET ASCII,
    CIDADE    CHAR(30) CHARACTER SET ASCII,
    ESTADO    CHAR(2) CHARACTER SET ASCII,
    CEP       CHAR(10) CHARACTER SET ASCII,
    TELEFONE  CHAR(14) CHARACTER SET ASCII,
    FAX       CHAR(14) CHARACTER SET ASCII,
    EMAIL     CHAR(60) CHARACTER SET ASCII,
    CGC       CHAR(14) CHARACTER SET ASCII
);

CREATE TABLE ITENS (
    CODIGO       INTEGER NOT NULL,
    PEDIDO       INTEGER,
    QUANTIDADE   INTEGER,
    VALUNITARIO  CHAR(8) CHARACTER SET ASCII,
    CLIENTE      INTEGER,
    VALTOTAL     CHAR(8) CHARACTER SET ASCII
);

CREATE TABLE NUMCLI (
    CLIENTE  INTEGER NOT NULL
);

CREATE TABLE NUMFOR (
    FORNEC  INTEGER NOT NULL
);

CREATE TABLE NUMPED (
    PEDIDO  INTEGER NOT NULL
);

CREATE TABLE NUMPRO (
    PRODUTO  INTEGER NOT NULL
);

CREATE TABLE NUMVEN (
    VENDEDOR  INTEGER NOT NULL
);

CREATE TABLE PRODUTOS (
    NUMERO        INTEGER NOT NULL,
    CODIGO        INTEGER,
    DESCRICAO     CHAR(40) CHARACTER SET ASCII,
    CODBARRAS     CHAR(13) CHARACTER SET ASCII,
    PRECO         CHAR(8) CHARACTER SET ASCII,
    CUSTO         CHAR(8) CHARACTER SET ASCII,
    FORNECEDOR    INTEGER,
    DATACADASTRO  DATE
);

CREATE TABLE USUARIO (
    CODIGO     INTEGER NOT NULL,
    LOGIN      CHAR(20) CHARACTER SET ASCII,
    SENHA      CHAR(6) CHARACTER SET ASCII,
    ADM        SMALLINT,
    MASTER     SMALLINT,
    DELETAR    SMALLINT,
    CONSULTAR  SMALLINT,
    GRAVAR     SMALLINT,
    TAB        SMALLINT,
    TAB1       SMALLINT,
    TAB2       SMALLINT,
    TAB3       SMALLINT,
    TAB4       SMALLINT,
    TAB5       SMALLINT,
    TAB6       SMALLINT,
    TAB7       SMALLINT,
    TAB8       SMALLINT,
    TAB9       SMALLINT,
    TAB10      SMALLINT,
    TAB11      SMALLINT,
    MOV        SMALLINT,
    MOV1       SMALLINT,
    MOV2       SMALLINT,
    MOV3       SMALLINT,
    MOV4       SMALLINT,
    CAL        SMALLINT,
    CAL1       SMALLINT,
    CAL2       SMALLINT,
    REL        SMALLINT,
    REL1       SMALLINT,
    REL2       SMALLINT,
    REL3       SMALLINT,
    REL4       SMALLINT,
    REL5       SMALLINT,
    REL6       SMALLINT,
    REL7       SMALLINT,
    REL8       SMALLINT,
    REL9       SMALLINT,
    REL10      SMALLINT,
    REL11      SMALLINT,
    CON        SMALLINT,
    CON1       SMALLINT,
    CON2       SMALLINT,
    CON3       SMALLINT,
    CON4       SMALLINT,
    UTI        SMALLINT,
    UTI1       SMALLINT,
    UTI2       SMALLINT,
    UTI3       SMALLINT,
    UTI4       SMALLINT,
    UTI5       SMALLINT,
    UTI6       SMALLINT,
    UTI7       SMALLINT
);

CREATE TABLE VENDAS (
    PEDIDO    INTEGER NOT NULL,
    DATA      DATE,
    VALOR     CHAR(8) CHARACTER SET ASCII,
    CLIENTE   INTEGER,
    VENDEDOR  INTEGER,
    CODVEN    INTEGER,
    PRAZO     INTEGER,
    NOTA      INTEGER
);

CREATE TABLE VENDEDORES (
    CODIGO    INTEGER NOT NULL,
    NOME      CHAR(60) CHARACTER SET ASCII,
    ENDERECO  CHAR(60) CHARACTER SET ASCII,
    CIDADE    CHAR(40) CHARACTER SET ASCII,
    ESTADO    CHAR(2) CHARACTER SET ASCII,
    CEP       CHAR(10) CHARACTER SET ASCII,
    TELEFONE  CHAR(14) CHARACTER SET ASCII
);



/******************************************************************************/
/*                                Primary Keys                                */
/******************************************************************************/

ALTER TABLE CLIENTES ADD CONSTRAINT PK_CLIENTES PRIMARY KEY (CODIGO);
ALTER TABLE CONTAPAG ADD CONSTRAINT PK_CONTAPAG PRIMARY KEY (INDICE);
ALTER TABLE CONTAREC ADD CONSTRAINT PK_CONTAREC PRIMARY KEY (CODIGO);
ALTER TABLE FORNECEDORES ADD CONSTRAINT PK_FORNECEDORES PRIMARY KEY (CODIGO);
ALTER TABLE ITENS ADD CONSTRAINT PK_ITENS PRIMARY KEY (CODIGO);
ALTER TABLE NUMCLI ADD CONSTRAINT PK_NUMCLI PRIMARY KEY (CLIENTE);
ALTER TABLE NUMPED ADD CONSTRAINT PK_NUMPED PRIMARY KEY (PEDIDO);
ALTER TABLE NUMPRO ADD CONSTRAINT PK_NUMPRO PRIMARY KEY (PRODUTO);
ALTER TABLE NUMVEN ADD CONSTRAINT PK_NUMVEN PRIMARY KEY (VENDEDOR);
ALTER TABLE PRODUTOS ADD CONSTRAINT PK_PRODUTOS PRIMARY KEY (NUMERO);
ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (CODIGO);
ALTER TABLE VENDAS ADD CONSTRAINT PK_VENDAS PRIMARY KEY (PEDIDO);
ALTER TABLE VENDEDORES ADD CONSTRAINT PK_VENDEDORES PRIMARY KEY (CODIGO);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: CLIENTES_BI */
CREATE TRIGGER CLIENTES_BI FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_clientes_id,1);
end
^

/* Trigger: CONTAPAG_BI */
CREATE TRIGGER CONTAPAG_BI FOR CONTAPAG
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.indice is null) then
    new.indice = gen_id(gen_contapag_id,1);
end
^

/* Trigger: CONTAREC_BI */
CREATE TRIGGER CONTAREC_BI FOR CONTAREC
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_contarec_id,1);
end
^

/* Trigger: FORNECEDORES_BI */
CREATE TRIGGER FORNECEDORES_BI FOR FORNECEDORES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_fornecedores_id,1);
end
^

/* Trigger: ITENS_BI */
CREATE TRIGGER ITENS_BI FOR ITENS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.CODIGO is null) then
    new.CODIGO = gen_id(gen_itens_id,1);
end
^

/* Trigger: PRODUTOS_BI */
CREATE TRIGGER PRODUTOS_BI FOR PRODUTOS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.numero is null) then
    new.numero = gen_id(gen_produtos_id,1);
end
^

/* Trigger: USUARIO_BI */
CREATE TRIGGER USUARIO_BI FOR USUARIO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_usuario_id,1);
end
^

/* Trigger: VENDAS_BI */
CREATE TRIGGER VENDAS_BI FOR VENDAS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.pedido is null) then
    new.pedido = gen_id(gen_vendas_id,1);
end
^

/* Trigger: VENDEDORES_BI */
CREATE TRIGGER VENDEDORES_BI FOR VENDEDORES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_vendedores_id,1);
end
^

SET TERM ; ^



/******************************************************************************/
/*                             Stored Procedures                              */
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE SP_GEN_CLIENTES_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_clientes_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_CONTAREC_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_contarec_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_FORNECEDORES_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_fornecedores_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_ITENS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_itens_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_NEW_TABLE_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_new_table_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_PRODUTOS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_produtos_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_USUARIO_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_usuario_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_VENDAS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_vendas_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_VENDEDORES_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_vendedores_id, 1);
  suspend;
end^



SET TERM ; ^
